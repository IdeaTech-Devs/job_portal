import{S as J,i as K,s as R,d as I,F as p,c as L,a as v,G as z,v as M,e as j,H as B,p as k,I as O,t as Q,f as T,u as U,j as V,k as X,J as b,r as E,w as Y,x as q,K as A,z as D,L as y,M as F}from"./C3hbPfUV.js";import"./SNjRx0_v.js";function G(t,e){const o={},i={},d={$$scope:1};let r=t.length;for(;r--;){const n=t[r],c=e[r];if(c){for(const u in n)u in c||(i[u]=1);for(const u in c)d[u]||(o[u]=c[u],d[u]=1);t[r]=c}else for(const u in n)d[u]=1}for(const n in i)n in o||(o[n]=void 0);return o}function ee(t){return typeof t=="object"&&t!==null?t:{}}/**
 * @license lucide-svelte v0.294.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const N={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"},H="node_modules/lucide-svelte/dist/svelte/Icon.svelte";function C(t,e,o){const i=t.slice();return i[10]=e[o][0],i[11]=e[o][1],i}function w(t){let e,o=[t[11]],i={};for(let r=0;r<o.length;r+=1)i=v(i,o[r]);const d={c:function(){e=F(t[10]),this.h()},l:function(n){e=A(n,t[10],{}),D(e).forEach(k),this.h()},h:function(){b(e,i),q(e,H,23,4,555)},m:function(n,c){E(n,e,c)},p:function(n,c){b(e,i=G(o,[c&32&&n[11]]))},d:function(n){n&&k(e)}};return I("SvelteRegisterBlock",{block:d,id:w.name,type:"child_dynamic_element",source:"(24:4) <svelte:element this={tag} {...attrs}/>",ctx:t}),d}function W(t){let e=t[10],o;B(t[10]);let i=t[10]&&w(t);const d={c:function(){i&&i.c(),o=y()},l:function(n){i&&i.l(n),o=y()},m:function(n,c){i&&i.m(n,c),E(n,o,c)},p:function(n,c){n[10]?e?R(e,n[10])?(i.d(1),B(n[10]),i=w(n),e=n[10],i.c(),i.m(o.parentNode,o)):i.p(n,c):(i=w(n),e=n[10],i.c(),i.m(o.parentNode,o)):e&&(i.d(1),i=null,e=n[10])},d:function(n){n&&k(o),i&&i.d(n)}};return I("SvelteRegisterBlock",{block:d,id:W.name,type:"each",source:"(23:2) {#each iconNode as [tag, attrs]}",ctx:t}),d}function S(t){let e,o,i,d,r,n=p(t[5]),c=[];for(let s=0;s<n.length;s+=1)c[s]=W(C(t,n,s));const u=t[9].default,h=L(u,t,t[8],null);let _=[N,t[6],{width:t[2]},{height:t[2]},{stroke:t[1]},{"stroke-width":i=t[4]?Number(t[3])*24/Number(t[2]):t[3]},{class:d=`lucide-icon lucide lucide-${t[0]} ${t[7].class??""}`}],m={};for(let s=0;s<_.length;s+=1)m=v(m,_[s]);const g={c:function(){e=F("svg");for(let l=0;l<c.length;l+=1)c[l].c();o=y(),h&&h.c(),this.h()},l:function(l){e=A(l,"svg",{width:!0,height:!0,stroke:!0,"stroke-width":!0,class:!0});var f=D(e);for(let a=0;a<c.length;a+=1)c[a].l(f);o=y(),h&&h.l(f),f.forEach(k),this.h()},h:function(){b(e,m),q(e,H,9,0,235)},m:function(l,f){E(l,e,f);for(let a=0;a<c.length;a+=1)c[a]&&c[a].m(e,null);Y(e,o),h&&h.m(e,null),r=!0},p:function(l,[f]){if(f&32){n=p(l[5]);let a;for(a=0;a<n.length;a+=1){const P=C(l,n,a);c[a]?c[a].p(P,f):(c[a]=W(P),c[a].c(),c[a].m(e,o))}for(;a<c.length;a+=1)c[a].d(1);c.length=n.length}h&&h.p&&(!r||f&256)&&U(h,u,l,l[8],r?X(u,l[8],f,null):V(l[8]),null),b(e,m=G(_,[N,f&64&&l[6],(!r||f&4)&&{width:l[2]},(!r||f&4)&&{height:l[2]},(!r||f&2)&&{stroke:l[1]},(!r||f&28&&i!==(i=l[4]?Number(l[3])*24/Number(l[2]):l[3]))&&{"stroke-width":i},(!r||f&129&&d!==(d=`lucide-icon lucide lucide-${l[0]} ${l[7].class??""}`))&&{class:d}]))},i:function(l){r||(T(h,l),r=!0)},o:function(l){Q(h,l),r=!1},d:function(l){l&&k(e),O(c,l),h&&h.d(l)}};return I("SvelteRegisterBlock",{block:g,id:S.name,type:"component",source:"",ctx:t}),g}function Z(t,e,o){const i=["name","color","size","strokeWidth","absoluteStrokeWidth","iconNode"];let d=z(e,i),{$$slots:r={},$$scope:n}=e;M("Icon",r,["default"]);let{name:c}=e,{color:u="currentColor"}=e,{size:h=24}=e,{strokeWidth:_=2}=e,{absoluteStrokeWidth:m=!1}=e,{iconNode:g}=e;return t.$$.on_mount.push(function(){c===void 0&&!("name"in e||t.$$.bound[t.$$.props.name])&&console.warn("<Icon> was created without expected prop 'name'"),g===void 0&&!("iconNode"in e||t.$$.bound[t.$$.props.iconNode])&&console.warn("<Icon> was created without expected prop 'iconNode'")}),t.$$set=s=>{o(7,e=v(v({},e),j(s))),o(6,d=z(e,i)),"name"in s&&o(0,c=s.name),"color"in s&&o(1,u=s.color),"size"in s&&o(2,h=s.size),"strokeWidth"in s&&o(3,_=s.strokeWidth),"absoluteStrokeWidth"in s&&o(4,m=s.absoluteStrokeWidth),"iconNode"in s&&o(5,g=s.iconNode),"$$scope"in s&&o(8,n=s.$$scope)},t.$capture_state=()=>({defaultAttributes:N,name:c,color:u,size:h,strokeWidth:_,absoluteStrokeWidth:m,iconNode:g}),t.$inject_state=s=>{o(7,e=v(v({},e),s)),"name"in e&&o(0,c=s.name),"color"in e&&o(1,u=s.color),"size"in e&&o(2,h=s.size),"strokeWidth"in e&&o(3,_=s.strokeWidth),"absoluteStrokeWidth"in e&&o(4,m=s.absoluteStrokeWidth),"iconNode"in e&&o(5,g=s.iconNode)},e&&"$$inject"in e&&t.$inject_state(e.$$inject),e=j(e),[c,u,h,_,m,g,d,e,n,r]}class te extends J{constructor(e){super(e),K(this,e,Z,S,R,{name:0,color:1,size:2,strokeWidth:3,absoluteStrokeWidth:4,iconNode:5}),I("SvelteRegisterComponent",{component:this,tagName:"Icon",options:e,id:S.name})}get name(){throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set name(e){throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get color(){throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set color(e){throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get size(){throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set size(e){throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get strokeWidth(){throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set strokeWidth(e){throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get absoluteStrokeWidth(){throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set absoluteStrokeWidth(e){throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get iconNode(){throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set iconNode(e){throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{te as I,ee as a,G as g};
